// <auto-generated />
using BibliotecaMetropoli.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BibliotecaMetropoli.Migrations
{
    [DbContext(typeof(BibliotecaMetropoliContext))]
    [Migration("20251022030109_InitialCreate_Clean")]
    partial class InitialCreate_Clean
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BibliotecaMetropoli.Models.Autor", b =>
                {
                    b.Property<int>("idAutor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idAutor"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("idAutor");

                    b.ToTable("Autor", (string)null);
                });

            modelBuilder.Entity("BibliotecaMetropoli.Models.AutoresRecurso", b =>
                {
                    b.Property<int>("IdRec")
                        .HasColumnType("int");

                    b.Property<int>("idAutor")
                        .HasColumnType("int");

                    b.Property<bool>("EsPrincipal")
                        .HasColumnType("bit");

                    b.HasKey("IdRec", "idAutor");

                    b.HasIndex("idAutor");

                    b.ToTable("AutoresRecursos", (string)null);
                });

            modelBuilder.Entity("BibliotecaMetropoli.Models.Editorial", b =>
                {
                    b.Property<int>("IdEdit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEdit"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdEdit");

                    b.ToTable("Editorial", (string)null);
                });

            modelBuilder.Entity("BibliotecaMetropoli.Models.Pais", b =>
                {
                    b.Property<int>("IdPais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPais"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPais");

                    b.ToTable("Pais", (string)null);
                });

            modelBuilder.Entity("BibliotecaMetropoli.Models.Recurso", b =>
                {
                    b.Property<int>("IdRec")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRec"));

                    b.Property<int?>("AutoridAutor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Edicion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdEdit")
                        .HasColumnType("int");

                    b.Property<int>("IdPais")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoR")
                        .HasColumnType("int");

                    b.Property<string>("PalabrasBusqueda")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("annopublic")
                        .HasColumnType("int");

                    b.HasKey("IdRec");

                    b.HasIndex("AutoridAutor");

                    b.HasIndex("IdEdit");

                    b.HasIndex("IdPais");

                    b.HasIndex("IdTipoR");

                    b.ToTable("Recurso", (string)null);
                });

            modelBuilder.Entity("BibliotecaMetropoli.Models.TipoRecurso", b =>
                {
                    b.Property<int>("IdTipoR")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoR"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTipoR");

                    b.ToTable("TipoRecurso", (string)null);
                });

            modelBuilder.Entity("BibliotecaMetropoli.Models.AutoresRecurso", b =>
                {
                    b.HasOne("BibliotecaMetropoli.Models.Recurso", "Recurso")
                        .WithMany("AutoresRecursos")
                        .HasForeignKey("IdRec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BibliotecaMetropoli.Models.Autor", "Autor")
                        .WithMany("AutoresRecursos")
                        .HasForeignKey("idAutor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Recurso");
                });

            modelBuilder.Entity("BibliotecaMetropoli.Models.Recurso", b =>
                {
                    b.HasOne("BibliotecaMetropoli.Models.Autor", null)
                        .WithMany("Recursos")
                        .HasForeignKey("AutoridAutor");

                    b.HasOne("BibliotecaMetropoli.Models.Editorial", "Editorial")
                        .WithMany("Recursos")
                        .HasForeignKey("IdEdit")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BibliotecaMetropoli.Models.Pais", "Pais")
                        .WithMany("Recursos")
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BibliotecaMetropoli.Models.TipoRecurso", "TipoRecurso")
                        .WithMany("Recursos")
                        .HasForeignKey("IdTipoR")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Editorial");

                    b.Navigation("Pais");

                    b.Navigation("TipoRecurso");
                });

            modelBuilder.Entity("BibliotecaMetropoli.Models.Autor", b =>
                {
                    b.Navigation("AutoresRecursos");

                    b.Navigation("Recursos");
                });

            modelBuilder.Entity("BibliotecaMetropoli.Models.Editorial", b =>
                {
                    b.Navigation("Recursos");
                });

            modelBuilder.Entity("BibliotecaMetropoli.Models.Pais", b =>
                {
                    b.Navigation("Recursos");
                });

            modelBuilder.Entity("BibliotecaMetropoli.Models.Recurso", b =>
                {
                    b.Navigation("AutoresRecursos");
                });

            modelBuilder.Entity("BibliotecaMetropoli.Models.TipoRecurso", b =>
                {
                    b.Navigation("Recursos");
                });
#pragma warning restore 612, 618
        }
    }
}
